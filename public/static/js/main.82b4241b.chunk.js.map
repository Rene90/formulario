{"version":3,"sources":["components/submit.js","components/formapp.js","App.js","serviceWorker.js","index.js"],"names":["Submit","submit","studentname","parentname","pregunta1","pregunta2","pregunta3","pregunta4","comentario1","comentario2","console","log","service","post","then","response","data","axios","create","baseURL","withCredentials","this","Option","Select","TextArea","Input","FormApp","props","formRef","createRef","handleSubmit","state","setState","current","resetFields","catch","error","handleChange","e","target","name","value","handleChangeSelect","handleChangeSelect2","handleChangeSelect3","handleChangeSelect4","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","id","ref","onFinish","Item","label","rules","required","message","whitespace","onChange","rows","className","type","htmlType","Component","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82b4241b.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass Submit{\n    constructor (){\n        let service = axios.create({\n            baseURL:\"https://formulario90.herokuapp.com/api\",\n            withCredentials:false\n        })\n        this.service= service\n    }\n    submit = (studentname, parentname, pregunta1, pregunta2, pregunta3, pregunta4, comentario1, comentario2)=>{\n        console.log(studentname, parentname, pregunta1, pregunta2, pregunta3, pregunta4, comentario1, comentario2)\n        return this.service.post('/submit', {studentname, parentname, pregunta1, pregunta2, pregunta3, pregunta4, comentario1, comentario2})\n        .then(response =>response.data)\n    }\n\n\n}\nexport default Submit;","import React , { Component, createRef} from 'react'\nimport {\n    Form, Input, Select, Button \n} from 'antd';\nimport Submit from './submit'\n\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nclass FormApp extends Component {\n  formRef = createRef()\n\n    constructor(props){\n        super(props)\n        this.state = {\n            studentname:'',\n            parentname:'',\n            pregunta1:'',\n            pregunta2:'',\n            pregunta3:'',\n            pregunta4:'',\n            comentario1:'',\n            comentario2:'',\n            \n\n        }\n        this.service = new Submit();\n    }\n    \n    \n    \n     handleSubmit = () => {\n       \n        \n        \n            const studentname = this.state.studentname\n            const parentname = this.state.parentname\n            const pregunta1 = this.state.pregunta1\n            const pregunta2 = this.state.pregunta2\n            const pregunta3 = this.state.pregunta3\n            const pregunta4 = this.state.pregunta4\n            const comentario1 = this.state.comentario1\n            const comentario2 = this.state.comentario2\n            console.log('Ya se sometio')\n            this.service.submit(studentname, parentname, pregunta1, pregunta2, pregunta3, pregunta4, comentario1, comentario2)\n            .then( response =>{\n                this.setState({\n                    studentname:'aaa',\n                    parentname:'',\n                    pregunta1:'',\n                    pregunta2:'',\n                    pregunta3:'',\n                    pregunta4:'',\n                    comentario1:'',\n                    comentario2:''\n\n                })\n                console.log(response)\n                this.formRef.current.resetFields()\n                //this.formRef.current.resetFields();\n                \n            })\n            .catch(error => console.log(error))\n       \n    }\n    \n    handleChange = (e) =>{\n        const {name, value} = e.target;\n        this.setState({[name]:value})\n\n    }\n    handleChangeSelect = (value)=>{\n      console.log('Holarespeta1')\n      this.setState({pregunta1:value})\n    }\n    handleChangeSelect2 = (value)=>{\n      \n      this.setState({pregunta2:value})\n    }\n    handleChangeSelect3 = (value)=>{\n      \n      this.setState({pregunta3:value})\n    }\n    handleChangeSelect4 = (value)=>{\n      \n      this.setState({pregunta4:value})\n    }\n    \n    render(){\n      \n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n    \n    \n\n        return(\n            <div id =\"Formulario\">\n                <Form {...formItemLayout} ref={this.formRef} onFinish={this.handleSubmit} id=\"formulario\"  >\n                <Form.Item\n                {...formItemLayout}\n                label={(\n                    <span>\n                        Nombre del alumno&nbsp;\n                        \n                    </span>\n                )}\n                name = \"studentname\" rules= {[{ required: true, message: 'Proporciona el nombre del alumno', whitespace: true }]}>\n                <Input name=\"studentname\" value={this.state.studentname} onChange={ e => this.handleChange(e)}/>\n              </Form.Item>\n\n            <Form.Item\n                {...formItemLayout}\n                label={(\n                    <span>\n                        Nombre del padre o tutor&nbsp;\n                        \n                    </span>\n                )}\n                name = \"parentname\" rules= {[{ required: true, message: 'Proporciona el nombre del padre o tutor', whitespace: true }]}>\n                \n            <Input name=\"parentname\" value={this.state.parentname} onChange={e => this.handleChange(e)}/>\n     \n\n            </Form.Item>\n\n        <Form.Item\n          \n          label=\"Atiende Indicaciones\"\n          name = \"pregunta1\" rules= {[{ required: true, message: 'Selecciona una respuesta', whitespace: true }]}>\n        \n         \n            \n                <Select  name=\"pregunta1\" \n                value= {this.state.pregunta1}\n                onChange={ this.handleChangeSelect}>\n                    \n                    <Option value=\"si\">Si</Option>\n                    <Option value=\"no\">No</Option>\n                    <Option value=\"ayuda\">Necesita ayuda</Option>                    \n                </Select>\n        \n        </Form.Item>\n\n        <Form.Item\n          {...formItemLayout}\n          label=\"Se muestra motivado (a) al realizar la actividad\"\n          name = \"pregunta2\" rules= {[{ required: true, message: 'Selecciona una respuesta', whitespace: true }]}>\n         \n            \n                <Select id=\"pregunta2\" name=\"pregunta2\" \n                value= {this.state.pregunta2}\n                onChange={ this.handleChangeSelect2}>\n                    <Option value=\"\">Selecciona una respuesta</Option>\n                    <Option value=\"si\">Si</Option>\n                    <Option value=\"no\">No</Option>\n                    <Option value=\"ayuda\">Necesita ayuda</Option>                    \n                </Select>\n         \n        </Form.Item>\n\n        <Form.Item\n          {...formItemLayout}\n          label=\"Identifica los numeros que observa\"\n          name = \"pregunta3\" rules= {[{ required: true, message: 'Selecciona una respuesta', whitespace: true }]}>\n        \n          \n            \n                <Select id=\"pregunta3\" name=\"pregunta3\" \n                value= {this.state.pregunta3}\n                onChange={this.handleChangeSelect3}>\n                    <Option value=\"\">Selecciona una respuesta</Option>\n                    <Option value=\"si\">Si</Option>\n                    <Option value=\"no\">No</Option>\n                    <Option value=\"ayuda\">Necesita ayuda</Option>                    \n                </Select>\n         \n        </Form.Item>\n\n        <Form.Item\n          {...formItemLayout}\n          label=\"Realiza conteo en orden estable\"\n          name = \"Pregunta4\" rules= {[{ required: true, message: 'Selecciona una respuesta', whitespace: true }]}>\n        \n        \n            \n                <Select id=\"pregunta4\" name=\"pregunta4\" \n                value= {this.state.pregunta4}\n                onChange={ this.handleChangeSelect4}>\n                    <Option value=\"\">Selecciona una respuesta</Option>\n                    <Option value=\"si\">Si</Option>\n                    <Option value=\"no\">No</Option>\n                    <Option value=\"ayuda\">Necesita ayuda</Option>                    \n                </Select>\n          \n        </Form.Item>\n        <Form.Item\n          {...formItemLayout}\n          label=\"Anote los numeros que menciona \"\n          name = \"comentario1\" rules= {[{ required: true, message: 'Escribe una respuesta', whitespace: true }]}>\n       \n                <TextArea name='comentario1' value = {this.state.comentario1} onChange={ e => this.handleChange(e)} rows={4} />\n       \n        </Form.Item>\n\n        <Form.Item\n          {...formItemLayout}\n          label=\"Que observas cuando tu hijo realiza la actividad \"\n          name = \"comentario2\" rules= {[{ required: true, message: 'Escribe una respuesta', whitespace: true }]}>\n       \n         \n                <TextArea name='comentario2' value = {this.state.comentario2} onChange={ e => this.handleChange(e)} rows={4} />\n                \n         \n        </Form.Item>\n\n        <Form.Item {...tailFormItemLayout}>\n          <Button className=\"login-form-button\" type=\"primary\" htmlType=\"submit\" >Enviar</Button>\n          \n        </Form.Item>\n\n        \n          </Form>\n\n\n\n\n\n\n                \n            </div>\n        )\n    }\n}\n\n\nexport default FormApp;","import React, { Component } from 'react';\n\nimport './App.css';\nimport { Route } from 'react-router-dom';\nimport Formapp from './components/formapp';\n\nclass App extends Component {\n  render(){\n    return(\n      <div className=\"App\">\n        <Route exact path='/' render={() => <Formapp/>} />\n      </div>\n    )\n  }\n}\n\n\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'antd/dist/antd.css'; \n\nReactDOM.render((\n  <Router>\n    <App />\n  </Router>\n  ), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}